
-------------------------------------------------
Naughty Boy - TMS3615 Melody management by CPU
-------------------------------------------------

Useful Mame debug cmd (exemple)

wpset 4014,1,w,wpdata != f  -- stop exec when cpu write something != $0F at $4014
                            -- used to avoid stoping at $00F8


-------------------------------------------------
Where CPU actually send sound cmd to hardware
-------------------------------------------------

00EC  ld   hl,$4014
00EF  ld   a,(hl)  
00F0  ld   ($A000),a  -- copy $4014 to $A000 (sound_cmd_a register)
00F3  inc  hl       
00F4  ld   a,(hl)   
00F5  ld   ($A800),a  -- copy $4015 to $A800 (sound_cmd_b register)
00F8  ld   (hl),$0F 
00FA  dec  hl       
00FB  ld   (hl),$0F 
00FD  ret           

-------------------------------------------------
Where CPU prepare data to be sent
-------------------------------------------------

03BC  ld   ($4014),a  -- could be patched with nop in 1.30 rom to mute these effects

2DA8  dec  a      
2DA9  and  $0F    
2DAB  ld   (hl),a 
2DAC  ld   b,$10  
2DAE  ld   l,$60  
2DB0  bit  2,(hl) 
2DB2  jp   z,$2DB7
2DB5  ld   b,$0C  
2DB7  ld   l,$15      
2DB9  ld   (hl),$3F   -- hl is $4015 set bit 4 and 5 in sound_cmd_b (another effect)
                      -- could be patched with nop in 6.25 rom  to mute these effects
2DBB  exx          
2DBC  ld   a,c     
2DBD  exx          
2DBE  and  b       
2DBF  ret  z       
2DC0  ld   (hl),$2F   -- hl is $4015 
                      -- could be patched with nop in 6.25 rom to mute these effects
2DC2  ret          

-------------------------------------------------
Actual melody (TMS3615) management
Probably called once every VBLANK
-------------------------------------------------

001E: call $0400

041D: call $3A58
0420: call $3AB0

3A58: 21 B7 40 ld   hl,$40B7  -- prepare song data to be played
3A5B: 7E       ld   a,(hl)    -- got value $25 for melody to start (example at game beginning)
3A5C: A7       and  a 
3A5D: C8       ret  z
3A5E: 23       inc  hl        -- hl <= $40B8
3A5F: 0F       rrca           -- $25 -> $92
3A60: 47       ld   b,a       -- save $92
3A61: DC 84 3A call c,$3A84   -- test $40B8 (maybe already playing if not 00)
3A64: 78       ld   a,b       -- retreive $92
3A65: E6 07    and  $07       -- $92 -> $02
3A67: 77       ld   (hl),a    -- $40B8 <- $02 (duration decrement step)
3A68: 78       ld   a,b       -- retreive $92
3A69: 0F       rrca           -- $92 ->
3A6A: 0F       rrca           -- $   -> $A4
3A6B: 00       nop
3A6C: E6 1E    and  $1E       -- $04
3A6E: C6 90    add  a,$90     
3A70: 4F       ld   c,a
3A71: 06 3A    ld   b,$3A     -- bc <- $3A94
3A73: 23       inc  hl        -- hl <- $40B9
3A74: 36 00    ld   (hl),$00  -- $40B9 <- $00
3A76: 23       inc  hl        -- hl <- $40BA   
3A77: 0A       ld   a,(bc)    -- a <- $3E
3A78: 77       ld   (hl),a    -- $40BA <- $3E
3A79: 23       inc  hl        -- hl <- $40BB
3A7A: 03       inc  bc        -- bc <- $3A95
3A7B: 0A       ld   a,(bc)    -- a <- $9A
3A7C: 77       ld   (hl),a    -- $40BB <- $9A
3A7D: 2E B7    ld   l,$B7     -- hl <- $40B7
3A7F: 36 00    ld   (hl),$00  -- $40B7 <- 00 (acknowledge song started)
3A81: C9       ret
3A82: FF       rst  $38
3A83: FF       rst  $38

3A84: 7E       ld   a,(hl)
3A85: A7       and  a
3A86: C8       ret  z
3A87: E1       pop  hl
3A88: C9       ret
3A89: FF       rst  $38
...
3A90: 3E 00  -- data : song start address
3A92: 3E 40
3A94: 3E 9A     <-- La marche Turque
3A96: 3E D6
3A98: 3F 00
3A9A: 3F 30
3A9c: 3F 75
3A9E: 3F 88
3AA0: FF       rst  $38
...
3AB0: 21 B8 40 ld   hl,$40B8
3AB3: 7E       ld   a,(hl)       -- read 40B8
3AB4: A7       and  a
3AB5: C8       ret  z            -- if $00 no song to play actually
3AB6: 23       inc  hl           -- else
3AB7: 7E       ld   a,(hl)       -- read 40B9
3AB8: A7       and  a
3AB9: C2 18 3B jp   nz,$3B18     -- not end of current note go decrement remaining duration
3ABC: 23       inc  hl           -- else
3ABD: 56       ld   d,(hl)       -- read 40BA => d
3ABE: 23       inc  hl
3ABF: 5E       ld   e,(hl)       -- read 40BB => e
3AC0: 34       inc  (hl)         -- advance to next note
3AC1: 1A       ld   a,(de)       -- read @de (next note)
3AC2: E6 07    and  $07          -- read duration table index (3 lower bits)
3AC4: C6 DE    add  a,$DE
3AC6: 4F       ld   c,a
3AC7: 06 3A    ld   b,$3A
3AC9: 0A       ld   a,(bc)       -- read 3ADE+0:7 => a (duration)
3ACA: 2B       dec  hl
3ACB: 2B       dec  hl
3ACC: 77       ld   (hl),a       -- 40B9 <= a (store duration @40B9)
3ACD: 1A       ld   a,(de)       -- (re)read @de (read next note once again)
3ACE: FE F8    cp   $F8
3AD0: D2 08 3B jp   nc,$3B08     -- if note >= $1F goto not a new note
                                 -- else 
3AD3: CD E6 3A call $3AE6        -- back with b = 68/34/00
3AD6: 80       add  a,b          -- $80+note / $40+note / $00+note (with 0< note <12)
                                 -- bits 7 and 6 select octave
3AD7: CD FA 3A call $3AFA        -- call apply new sound_cmd routine
3ADA: C9       ret
3ADB: FF       rst  $38
3ADC: FF       rst  $38
3ADD: FF       rst  $38

3ADE: 0C       inc  c       -- duration data table (8 values)
3ADF: 1C       inc  e
3AE0: 2C       inc  l
3AE1: 3C       inc  a
3AE2: 5C       ld   e,h
3AE3: 7C       ld   a,h
3AE4: BC       cp   h
3AE5: FC 
                            -- manage octave bits from note value
3AE6: E6 F8    and  $F8     
3AE8: 0F       rrca         -- remove duration bits (3 lower ones)
3AE9: 0F       rrca
3AEA: 0F       rrca         
3AEB: 06 68    ld   b,$68   -- if note >= 24 ($18) select octave 2
3AED: FE 18    cp   $18     -- $18+$68 = $80 (see add  a,b @ 3AD6)
3AEF: D0       ret  nc
3AF0: 06 34    ld   b,$34   -- if note >= 12 ($0c) select octave 1
3AF2: FE 0C    cp   $0C     -- $0C+$34 = $40 (see add  a,b @ 3AD6)
3AF4: D0       ret  nc
3AF5: 06 00    ld   b,$00   -- else (note < 12) select octave 0
3AF7: C9       ret          
3AF8: FF       rst  $38
3AF9: FF       rst  $38
                            -- apply new sound_cmd routine  
3AFA: 2E BC    ld   l,$BC
3AFC: 77       ld   (hl),a  -- 40BC <= a (save note to be played)
3AFD: 47       ld   b,a
3AFE: 2E 15    ld   l,$15    
3B00: 7E       ld   a,(hl)  -- 4015 => a (retreive currently applied sound_cmd)
3B01: E6 30    and  $30     -- keep only bit 4 and 5 which are sound_cmd part of sound effect
3B03: B0       or   b       -- preserve bit 4 and 5 state
3B04: 77       ld   (hl),a  -- 4015 <= a (actually apply new sound_cmd )
3B05: C9       ret
3B06: FF       rst  $38
3B07: FF       rst  $38
                             -- not a new note routine (>= $F8)
3B08: 3E CF    ld   a,$CF
3B0A: CD FA 3A call $3AFA
3B0D: 1A       ld   a,(de)   -- (re)read @de (read next note once again)
3B0E: FE FF    cp   $FF      -- if not $FF it is not end of song
3B10: C0       ret  nz       
3B11: 2E B8    ld   l,$B8    -- if $FF it is end of song
3B13: 36 00    ld   (hl),$00 -- set $40B8 to $00
3B15: C9       ret

3B16: FE FF    cp   $FF
                              -- enter here with remainig duration in a
3B18: 2B       dec  hl        -- hl <= 40B8 (pointer to duration decrement step)
3B19: 96       sub  (hl)      -- decrement remaining duration
3B1A: D2 1E 3B jp   nc,$3B1E
3B1D: AF       xor  a
3B1E: 23       inc  hl        -- hl <= 40B9 (remainig duration)
3B1F: 77       ld   (hl),a    -- save remaining duration
3B20: FE 06    cp   $06       -- if remain duration is less than 6     
3B22: 06 0F    ld   b,$0F     -- then prepare sound_cmd low nibble to be $F
3B24: DA 29 3B jp   c,$3B29
3B27: 06 0E    ld   b,$0E     -- else prepare sound_cmd low nibble to be $E
3B29: 2E BC    ld   l,$BC     -- hl <= 40BC
3B2B: 7E       ld   a,(hl)    -- retreive current note
3B2C: E6 C0    and  $C0       -- preserve only octave bits
3B2E: B0       or   b         -- set low nibble to $E or $F
3B2F: CD FA 3A call $3AFA     -- apply new sound_cmd
3B32: C9       ret

-------------------------------------------------
Songs data : probably 8 melody available

@3E9A is the entrance game theme : 
W.A. Mozart : La marche Turque (Alla Turca)

-------------------------------------------------
Mame debug commmand hint : 

- g 3A81

start playing until breakpoint is reached
replace 3E9A @40BA/BB with another song start address

- g

you will hear the selected melody instead of Alla Turca
-------------------------------------------------

3E00:  3B 59 73 59 3B 59 73 59 83 81 81 99 81 74 5C 3B  ;YsY;YsY.....t\;
3E10:  59 73 59 3B 59 73 71 AB 91 81 91 81 76 3B 59 73  YsY;Ysq.....v;Ys
3E20:  59 3B 59 73 59 83 81 81 99 81 74 5C 73 99 BB 99  Y;YsY.....t\s...
3E30:  83 99 C3 E1 D3 B9 A9 B9 A9 B9 A9 9E FD FF FF FF  ................
3E40:  58 F8 80 F8 58 F8 80 F8 98 F8 80 F8 98 F8 B9 99  X...X...........
3E50:  C0 F8 B8 F8 98 F8 80 F8 91 79 98 F8 90 F8 70 F8  .........y....p.
3E60:  58 F8 80 F8 58 F8 98 F8 90 F8 F9 58 F8 80 F8 58  X...X......X...X
3E70:  F8 80 F8 98 F8 80 F8 98 F8 B9 99 C0 F8 B8 F8 98  ................
3E80:  F8 80 F8 91 79 98 F8 90 F8 70 F8 58 F8 80 F8 58  ....y....p.X...X
3E90:  F8 78 F8 80 F8 F9 FD FF FF FF 30 20 18 20 38 F8  .x........0 . 8.
3EA0:  F9 48 38 30 38 58 F8 F9 60 58 50 58 90 80 78 80  .H808X..`XPX..x.
3EB0:  90 80 78 80 9B 80 F8 98 F8 90 F8 80 F8 70 F8 80  ..x..........p..
3EC0:  F8 90 F8 80 F8 70 F8 80 F8 90 F8 80 F8 70 F8 68  .....p.......p.h
3ED0:  F8 58 F8 F9 FF FF 49 73 91 AB 91 BB 99 AB 91 73  .X....Is.......s
3EE0:  99 AA 99 91 83 81 F9 83 49 73 91 AB 91 BB 99 AB  ........Is......
3EF0:  B9 A9 99 91 99 91 81 73 70 F8 73 FF FF FF FF FF  .......sp.s..... 
3F00:  90 A0 AA B8 A9 81 90 80 90 A0 A9 81 A8 A0 A8 B8  ................
3F10:  C8 B8 A8 B8 C8 F8 B9 B9 90 A0 AA B8 A9 81 90 80  ................
3F20:  90 A0 A9 81 6A 80 5A 70 68 F8 49 49 FF FF FF FF  ....j.Zph.II....
3F30:  89 88 88 8B 89 88 88 8B B1 B0 B0 B1 A9 88 88 8B  ................
3F40:  C9 C8 C8 C8 CB C1 C0 C0 C3 38 48 58 60 71 81 61  .........8HX`q.a
3F50:  F9 C1 F9 89 88 88 8B 89 88 88 8B B1 B0 B0 B1 B1  ................
3F60:  A9 88 88 8B D1 D0 D0 D3 C1 D1 E1 F1 99 F9 C1 F9  ................
3F70:  89 FC FF FF FF 3B 3A 38 3B 3A 38 3B 4B 5D 4B 4A  .....;:8;:8;K]KJ
3F80:  48 4B 4A 48 63 53 4D FF 4B 49 4B 21 6B 69 6B 49  HKJHcSM.KIK!kikI
3F90:  83 69 81 69 49 23 20 F8 24 4B 49 4B 21 6B 69 6B  .i.iI# .$KIK!kik
3FA0:  49 83 69 81 69 49 83 80 F8 84 23 49 23 69 23 49  I.i.iI....#I#i#I
3FB0:  23 69 23 69 49 69 81 23 20 F8 24 FF FF 3A 00 B0  #i#iIi.# .$..:..
3FC0:  E6 08 C0 34 23 34 23 36 20 3A 73 42 47 C6 02 E6  ...4#4#6 :sBG...
3FD0:  FC 23 77 23 36 18 2E 75 56 23 5E 78 E6 03 FE 02  .#w#6..uV#^x....
3FE0:  D4 D4 02 2E 55 72 23 73 CD A0 3D C9 FF 21 55 42  ....Ur#s..=..!UB
3FF0:  56 23 5E CD D4 02 1B 21 AA 2A 01 05 00 ED B0 C9  V#^....!.*......
4000:  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00  ................


-------------------------------------------------
Analysing first notes of La marche Turque @3E9A
Decrement step = 2
Duration is decremented once every VBLANK
-------------------------------------------------
-Data bits usage -
Duration index : bits 2..0
Absolute note  : bits 7..3

Note   = absolute note modulo 12
Octave = absolute note / 12


Data      : 30 20 18 20 38 F8 F9 48 38 30 38 58 F8 F9 60 58
Dur. Index:  0  0  0  0  0  0  1  0  0  0  0  0  0  1  0  0
Duration  : 0C 0C 0C 0C 0C 0C 1C 0C 0C 0C 0C 0C 0C 1C 0C 0C
Abs.Note  : 06 04 03 04 07 1F 1F 09 07 06 07 0B 1F 1F 0C 0B
Note      : 06 04 03 04 07 1F 1F 09 07 06 07 0B 1F 1F 00 0B
Octave    : 00 00 00 00 00 NA NA 00 00 00 00 00 NA NA 01 00

Command sequence written to 40BC/4015 (each column after the other)
(bit 7 to 6 copy the octave value)

          : 06 04 03 04 07 CF CF 09 07 06 07 0B CF CF 40 0B 
            0E 0E 0E 0E 0E CE CE 0E 0E 0E 0E 0E CE CE 4E 0E
            0E 0E 0E 0E 0E CE CE 0E 0E 0E 0E 0E CE CE 4E 0E
            0E 0E 0E 0E 0E CE CE 0E 0E 0E 0E 0E CE CE 4E 0E
            0F 0F 0F 0F 0F CF CE 0F 0F 0F 0F 0F CF CE 4F 0F
            0F 0F 0F 0F 0F CF CE 0F 0F 0F 0F 0F CF CE 4F 0F
            0F 0F 0F 0F 0F CF CE 0F 0F 0F 0F 0F CF CE 4F 0F
                              CE                   CE
                              CE                   CE
                              CE                   CE
                              CE                   CE
                              CE                   CE
                              CF                   CF
                              CF                   CF
                              CF                   CF

-------------------------------------------------
Hardware behaviour - tone
-------------------------------------------------

LS145s outputs (IC38 & IC39 - 8201 CPU board) drives Kx key of TMS3615 
and charges the corresponding 1uF capacitor depending on the command low nibble value

Nibble value:  0  1  2  3  4  5  6  7  8  9  A  B  C D E F 
TMS3615 pin : 18 19 20 21 22 23 24  5  6  7  8  9 10 - - 3  (numbers from NB schematic)

Notice that there is a mismatch between pin numbering in T.I. datasheet (pdf) and Naughty Boy schematic !
Obvious for 8' and 16' outputs are read as 
- pin 27 and 2 in Naughty Boy schematic, but 
- pin 26 and 3 in T.I. datasheet

So, one can assumes that pin 3 (in schematic) is actually the SUSTAIN BIAS pin.
SUSTAIN BIAS pin vary the tone duration by varying the Kx pins impedance and then modify capacitor discharge speed

Finaly I will assume that : 
- value 0 to C charges the 1uF capacitor and start playing the corresponding tone
- value    E   maintains the current tone(s) (no capacitor discharge)
- value    F   lets capacitor to discharge


value F is also the default 'no sound' command.
value C should not be sent by the software (max note is B due to modulo computation)
value D is not used.

-------------------------------------------------
Hardware behaviour - octave
-------------------------------------------------
The IC marked as A in a circle is not known (IC20 - 8201 CPU board) drives not numbered pin.
I simply assume that bit 7 and 6 of command value (octave) selects the TMS3615 clock.

value 00 selects hcnt(3) => 375Khz
value 01 selects hcnt(2) => 750Khz
value 10 selects hcnt(1) => 1.5Mhz
value 11 selects gnd     => 0.00hz (preferably lets keep previous selected octave)












